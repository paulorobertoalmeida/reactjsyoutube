[{"/Users/Antonio/youtube-clone/src/reportWebVitals.js":"1","/Users/Antonio/youtube-clone/src/App.js":"2","/Users/Antonio/youtube-clone/src/components/Header/Header.js":"3","/Users/Antonio/youtube-clone/src/components/SideBar/SideBar.js":"4","/Users/Antonio/youtube-clone/src/components/SideBarRow/SideBarRow.js":"5","/Users/Antonio/youtube-clone/src/components/SearchPage/SearchPage.js":"6","/Users/Antonio/youtube-clone/src/components/RecommendedVideos/RecommendedVideos.js":"7"},{"size":362,"mtime":1610965854064,"results":"8","hashOfConfig":"9"},{"size":1132,"mtime":1610987438832,"results":"10","hashOfConfig":"9"},{"size":1396,"mtime":1610970933020,"results":"11","hashOfConfig":"9"},{"size":1240,"mtime":1610971781784,"results":"12","hashOfConfig":"9"},{"size":345,"mtime":1610987546910,"results":"13","hashOfConfig":"9"},{"size":4924,"mtime":1611072103116,"results":"14","hashOfConfig":"9"},{"size":3078,"mtime":1611076115423,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gx1gv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/Antonio/youtube-clone/src/reportWebVitals.js",[],"/Users/Antonio/youtube-clone/src/App.js",[],"/Users/Antonio/youtube-clone/src/components/Header/Header.js",[],"/Users/Antonio/youtube-clone/src/components/SideBar/SideBar.js",["32","33","34","35"],"import React from \"react\";\nimport SideBarRow from \"./../SideBarRow/SideBarRow\";\nimport \"./SideBarRow.css\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport Subscription from \"@material-ui/icons/Subscritions\";\nimport VideoLibraryIcon from \"@material-ui/icon/VideoLibrary\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport OndemandVideoIcon from \"@material-ui/icon/OndemandVideo\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\n\nconst Sidebar = () => {\n    return(\n        <div className=\"sidebar\">\n            <SideBarRow selected Icon={HomeIcon} title=\"Home\" />\n            <SideBarRow Icon={WhatshotIcon} title=\"Trending\" />\n            <SideBarRow Icon={SubscriptionIcon} title=\"Subscription\" />\n            <SideBarRow Icon={VideoLibraryIcon} title=\"library\" />\n            <SideBarRow Icon={HistoryIcon} title=\"History\" />\n            <SideBarRow Icon={OndemandVideoIcon} title=\"Your videos\"/>\n            <SideBarRow Icon={WatchLaterIcon} title=\"Watch Later\"/>\n            <SideBarRow Icon={ThumbUpIcon} title=\"Liked Videos\" />\n            <hr />\n        </div>\n    )\n}\n\nexport default SideBar;","/Users/Antonio/youtube-clone/src/components/SideBarRow/SideBarRow.js",[],"/Users/Antonio/youtube-clone/src/components/SearchPage/SearchPage.js",[],"/Users/Antonio/youtube-clone/src/components/RecommendedVideos/RecommendedVideos.js",["36"],"import React, {useEffect, useState} from \"react\";\nimport VideoCard from \"./../VideoCard/VideoCard\";\nimport \"./RecommendedVideos.css\";\nimport axios from \"axios\";\nimport {DataTime} from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"@material-ui/core/CircularProcess\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst RecommendedVideos = () => {\n    const [videoCards, setVideoCards] = useState([]); \n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=9&regionCode=PK&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response =>{\n            createVideoCards(response.data.items);\n        })\n        .catch(error) => {\n            console.log(error);\n            setIsError(true);\n        })\n    }, [])\n\n    async function createVideoCards(videoItems) {\n        let newVideoCard = [];\n        for (const video of videoItems) {\n            const videoId = video.id;\n            const snippet = video.snippet;\n            const channelId = snippet.channelId;\n            const response = await axios\n            .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n            const channelImage = response.data.items[0].snippet.thumbnails.media.url;\n\n            const title = snippet.title;\n            const image = snippet.thumbnails.medium.url;\n            const timestamp = video.statistics.viewCount;\n            const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\n            const channel = snippet.channelTitle;\n\n            newVideoCard.push({\n                videoId,\n                image,\n                title,\n                channel,\n                views,\n                timestamp,\n                channelImage\n            });\n        };\n        setVideoCard(newVideoCard);\n        setIsLoading(false);\n    }\n\n    if(isError) {\n        return <Alert severity=\"error\" className=\"loading\">No Results found!</Alert>\n    }\n    return (\n        <div className=\"recommendedvideos\">\n            { isLoading ? <CircularProgress className=\"loading\" color=\"secondary\" /> : null }\n            <div className=\"recomendedvideos__videos\">\n            {\n                videoCards.map(item => {\n                    return (\n                        <Link key={item.videoId} to={\"/video/${item.videoId}\"}>\n                        <VideoCard \n                        title={item.title}\n                        image={item.image}\n                        views={item.views}\n                        timestamp={item.timestamp}\n                        channel={item.channel}\n                        channelImage={item.channelImage}\n                        />\n                        </Link>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n\n}\n\nexport default RecommendedVideos;",{"ruleId":"37","severity":1,"message":"38","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":20},{"ruleId":"37","severity":1,"message":"41","line":13,"column":7,"nodeType":"39","messageId":"40","endLine":13,"endColumn":14},{"ruleId":"42","severity":2,"message":"43","line":18,"column":31,"nodeType":"39","messageId":"44","endLine":18,"endColumn":47},{"ruleId":"42","severity":2,"message":"45","line":29,"column":16,"nodeType":"39","messageId":"44","endLine":29,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"46","line":21,"column":23},"no-unused-vars","'Subscription' is defined but never used.","Identifier","unusedVar","'Sidebar' is assigned a value but never used.","no-undef","'SubscriptionIcon' is not defined.","undef","'SideBar' is not defined.","Parsing error: Unexpected token, expected \";\"\n\n  19 |             createVideoCards(response.data.items);\n  20 |         })\n> 21 |         .catch(error) => {\n     |                       ^\n  22 |             console.log(error);\n  23 |             setIsError(true);\n  24 |         })"]